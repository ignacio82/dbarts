## pass -DMATCH_BAYES_TREE to get same results as BayesTree, including excess random calls
MATCH_BAYES_TREE=@match_bayes_tree@
THREAD_SAFE_UNLOAD=@thread_safe_unload@
SSE2_FLAG=@SSE2_FLAG@
SSE4_1_FLAG=@SSE4_1_FLAG@
AVX_FLAG=@AVX_FLAG@
AVX2_FLAG=@AVX2_FLAG@

INST_DIR=../inst

# pthreads can be tricky to setup across compilers so we take what our configure script gives
# us and re-use the preprocessor and linker flags depending on which compiler is being used
#
# specifically, gcc/clang have to reuse the compiler flag for linking as the lib flag is empty
# while oracle developer studio has to use both flags in all places
COMPILER.sun=sun
COMPILER.clang=clang
COMPILER.gnu=gnu
COMPILER.=default
COMPILER=$(COMPILER.@COMPILER_VENDOR@)

PTHREAD_CPPFLAGS.sun = @PTHREAD_CFLAGS@ @PTHREAD_LIBS@
PTHREAD_CPPFLAGS.clang = @PTHREAD_CFLAGS@
PTHREAD_CPPFLAGS.gnu = @PTHREAD_CFLAGS@
PTHREAD_CPPFLAGS.default = @PTHREAD_CFLAGS@

PTHREAD_LIBS.sun = @PTHREAD_CFLAGS@ @PTHREAD_LIBS@
PTHREAD_LIBS.clang = @PTHREAD_CFLAGS@
PTHREAD_LIBS.gnu = @PTHREAD_CFLAGS@
PTHREAD_LIBS.default = @PTHREAD_LIBS@

PTHREAD_CPPFLAGS = $(PTHREAD_CPPFLAGS.$(COMPILER))
PTHREAD_LIBS = $(PTHREAD_LIBS.$(COMPILER))

PKG_CPPFLAGS=-I$(INST_DIR)/include -Iinclude $(PTHREAD_CPPFLAGS)
# on Solaris, we need to include a flag to the linker
# since there is no PKG_LDFLAGS, we include that here
PKG_LIBS=@MAPFILE_FLAG@ dbarts.a external.a misc.a rc.a $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(PTHREAD_LIBS)

MkInclude = $(R_HOME)/etc${R_ARCH}/Makeconf

SUBDIRS = dbarts external misc rc
SUBLIBS = $(SUBDIRS:=.a)

all: $(SHLIB)

$(SHLIB): sublibs

sublibs:
	@for d in $(SUBDIRS); do \
	  (cd $${d} && $(MAKE) -f "$(MkInclude)" -f Makefile library \
	         PTHREAD_CPPFLAGS="$(PTHREAD_CPPFLAGS)" INST_DIR="$(INST_DIR)" \
           DBARTS_FLAGS="$(MATCH_BAYES_TREE) $(THREAD_SAFE_UNLOAD)"  \
           SSE2_FLAG="$(SSE2_FLAG)" SSE4_1_FLAG="$(SSE4_1_FLAG)" AVX_FLAG="$(AVX_FLAG)" AVX2_FLAG="$(AVX2_FLAG)" \
           CC="$(CC)" CFLAGS="$(CFLAGS) $(CPICFLAGS)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS) $(CXXPICFLAGS)" \
           CLINK_CPPFLAGS="$(CLINK_CPPFLAGS)" CPPFLAGS="$(CPPFLAGS)" AR="$(AR)" ARFLAGS="$(ARFLAGS)") \
           || exit 1; \
	done

clean: subclean
	@-rm -f ../inst/include/dbarts/types.hpp include/misc/types.h config.hpp
	@-rm -rf .libs _libs
	@-rm -f *.o $(SHLIB)

subclean:
	@-rm -f *.a
	@for d in $(SUBDIRS); do \
	  (cd $${d} && MkInclude="$(MkInclude)" $(MAKE) clean) || exit 1; \
	done

